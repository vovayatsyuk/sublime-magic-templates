<?php

namespace {namespace};

use Magento\Ui\DataProvider\AddFieldToCollectionInterface;
use {psr4key}Model\ResourceModel\{basename|remove DataProvider|remove Provider}\Collection;

class {classname} extends \Magento\Ui\DataProvider\AbstractDataProvider
{{
    /**
     * @var AddFieldToCollectionInterface[]
     */
    protected \$addFieldStrategies;

    /**
     * Construct
     *
     * @param string \$name
     * @param string \$primaryFieldName
     * @param string \$requestFieldName
     * @param Collection \$collection
     * @param AddFieldToCollectionInterface[] \$addFieldStrategies
     * @param array \$meta
     * @param array \$data
     */
    public function __construct(
        \$name,
        \$primaryFieldName,
        \$requestFieldName,
        Collection \$collection,
        array \$addFieldStrategies = [],
        array \$meta = [],
        array \$data = []
    ) {{
        parent::__construct(\$name, \$primaryFieldName, \$requestFieldName, \$meta, \$data);
        \$this->collection = \$collection;
        \$this->addFieldStrategies = \$addFieldStrategies;
    }}

    /**
     * Add field to select
     *
     * @param string|array \$field
     * @param string|null \$alias
     * @return void
     */
    public function addField(\$field, \$alias = null)
    {{
        if (isset(\$this->addFieldStrategies[\$field])) {{
            \$this->addFieldStrategies[\$field]->addField(\$this->getCollection(), \$field, \$alias);
        }} else {{
            parent::addField(\$field, \$alias);
        }}
    }}
}}
