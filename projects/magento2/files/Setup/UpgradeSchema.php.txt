<?php

namespace {namespace};

use Magento\Framework\Setup\UpgradeSchemaInterface;
use Magento\Framework\Setup\ModuleContextInterface;
use Magento\Framework\Setup\SchemaSetupInterface;
use Magento\Framework\DB\Ddl\Table;
use Magento\Framework\DB\Adapter\AdapterInterface;

class {classname} implements UpgradeSchemaInterface
{{
    /**
     * Installs DB schema for a module
     *
     * @param SchemaSetupInterface \$setup
     * @param ModuleContextInterface \$context
     * @return void
     */
    public function upgrade(SchemaSetupInterface \$setup, ModuleContextInterface \$context)
    {{
        \$setup->startSetup();

        if (version_compare(\$context->getVersion(), '1.0.0', '<')) {{
            \$this->createTable(\$setup);
        }}

        \$setup->endSetup();
    }}

    protected function createTable(SchemaSetupInterface \$setup)
    {{
        \$table = \$setup->getConnection()
            ->newTable(\$setup->getTable('{module|lower}'))
            ->addColumn(
                'entity_id',
                Table::TYPE_INTEGER,
                null,
                [
                    'nullable' => false,
                    'primary'  => true,
                    'unsigned' => true,
                    'identity' => true,
                ],
                'ID'
            )
            ->addColumn('title', Table::TYPE_TEXT, 255)
            ->addColumn('description', Table::TYPE_TEXT)
            ->addColumn(
                'is_active',
                Table::TYPE_SMALLINT,
                null,
                [
                    'nullable' => false,
                    'default'  => 1
                ],
                'Is Item Active'
            )
            ->addColumn(
                'updated_at',
                Table::TYPE_TIMESTAMP,
                null,
                ['nullable' => false, 'default' => Table::TIMESTAMP_INIT],
                'Update Time'
            );
        \$setup->getConnection()->createTable(\$table);
    }}
}}
